// <auto-generated />
using System;
using Hospital.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.DAL.Migrations
{
    [DbContext(typeof(HospitalDb))]
    [Migration("20221030112409_pat")]
    partial class pat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hospital.DAL.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerformanceRate")
                        .HasColumnType("int");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0493f928-a4b7-40de-96d2-fea87cc3ef52"),
                            Name = "Ahmed",
                            PerformanceRate = 90,
                            Salary = 30000.0,
                            Specialization = "Cardiology"
                        },
                        new
                        {
                            Id = new Guid("e992ddc0-30b1-4990-81f8-42fc8cc3e4e1"),
                            Name = "Nancy",
                            PerformanceRate = 80,
                            Salary = 40000.0,
                            Specialization = "Dermatology"
                        },
                        new
                        {
                            Id = new Guid("449498aa-da70-40cd-8686-6df2c9958897"),
                            Name = "Wael",
                            PerformanceRate = 99,
                            Salary = 90000.0,
                            Specialization = "Dentist"
                        },
                        new
                        {
                            Id = new Guid("1e2a5653-5b98-44d4-b598-5a458459d468"),
                            Name = "MOhammed",
                            PerformanceRate = 80,
                            Salary = 95000.0,
                            Specialization = "opthomalogy"
                        },
                        new
                        {
                            Id = new Guid("7435482d-a009-4342-aa04-423859061537"),
                            Name = "Nader",
                            PerformanceRate = 100,
                            Salary = 75000.0,
                            Specialization = "Pediartics"
                        });
                });

            modelBuilder.Entity("Hospital.DAL.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Issues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00f8c445-5957-432c-9dc0-88c8b1813db1"),
                            Name = "Cold"
                        },
                        new
                        {
                            Id = new Guid("c094f123-d49f-437a-91d8-d38049e84eb8"),
                            Name = "Stress"
                        },
                        new
                        {
                            Id = new Guid("e3809c15-7dfc-46f3-9b8b-edd5db3fd572"),
                            Name = "Headache"
                        });
                });

            modelBuilder.Entity("Hospital.DAL.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fda8cb7-7f3a-4a80-b0a0-b66c5f901276"),
                            Name = "Shawn"
                        },
                        new
                        {
                            Id = new Guid("65ab7d82-9421-498f-9c36-2821cada230b"),
                            Name = "Michal"
                        },
                        new
                        {
                            Id = new Guid("efa74df1-ae17-4e6c-8bee-20caad7e4d2e"),
                            Name = "Arnold"
                        });
                });

            modelBuilder.Entity("IssuePatient", b =>
                {
                    b.Property<Guid>("IssuesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("patientsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IssuesId", "patientsId");

                    b.HasIndex("patientsId");

                    b.ToTable("IssuePatient");
                });

            modelBuilder.Entity("IssuePatient", b =>
                {
                    b.HasOne("Hospital.DAL.Issue", null)
                        .WithMany()
                        .HasForeignKey("IssuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.DAL.Patient", null)
                        .WithMany()
                        .HasForeignKey("patientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
